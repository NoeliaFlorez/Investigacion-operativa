#modificar nombre XXXXX con padr√≥n
# no escribir nada aca
from cvxopt import glpk
from cvxopt.base import matrix as m
from cvxopt import solvers
import cvxopt
from cvxopt.glpk import ilp

def function_103904(w):
    w12=2484.
    w13=844.
    w14=2003.
    w16= float(w)
    w25=1238.
    w26=781.
    w32=1142.
    w34=1370.
    w36=1564.
    w46=570.
    w47=908.
    w58=1448.
    w65=1241.
    w67=569.
    w68=1966.
    w78=673.

    c = m([w12,w13,w14,w16,w25,w26,w32,w34,w36,w46,w47,w58,w65,w67,w68,w78])
    A = m([[1.,1.,0.,0.,0.,0.,0.,0.], #b12
          [1.,0.,1.,0.,0.,0.,0.,0.], #b13
          [1.,0.,0.,1.,0.,0.,0.,0.], #b14
          [1.,0.,0.,0.,0.,1.,0.,0.], #b16
          [0.,-1.,0.,0.,1.,0.,0.,0.], #b25
          [0.,-1.,0.,0.,0.,1.,0.,0.], #b26 
          [0.,1.,-1.,0.,0.,0.,0.,0.], #b32
          [0.,0.,-1.,1.,0.,0.,0.,0.], #b34
          [0.,0.,-1.,0.,0.,1.,0.,0.], #b36
          [0.,0.,0.,-1.,0.,1.,0.,0.], #b46
          [0.,0.,0.,-1.,0.,0.,1.,0.], #b47
          [0.,0.,0.,0.,-1.,0.,0.,1.], #b58
          [0.,0.,0.,0.,1.,-1.,0.,0.], #b65
          [0.,0.,0.,0.,0.,-1.,1.,0.], #b67
          [0.,0.,0.,0.,0.,-1.,0.,1.], #b68
          [0.,0.,0.,0.,0.,0.,-1.,1.]]) #b78

    b = m([1.,0.,0.,0.,0.,0.,0.,1.])

    G = m([[0.,0.,0.,0.,0.,0.,0.,0.], #b12
          [0.,0.,0.,0.,0.,0.,0.,0.], #b13
          [0.,0.,0.,0.,0.,0.,0.,0.], #b14
          [0.,0.,0.,0.,0.,0.,0.,0.], #b16
          [0.,0.,0.,0.,0.,0.,0.,0.], #b25
          [0.,0.,0.,0.,0.,0.,0.,0.], #b26 
          [0.,0.,0.,0.,0.,0.,0.,0.], #b32
          [0.,0.,0.,0.,0.,0.,0.,0.], #b34
          [0.,0.,0.,0.,0.,0.,0.,0.], #b36
          [0.,0.,0.,0.,0.,0.,0.,0.], #b46
          [0.,0.,0.,0.,0.,0.,0.,0.], #b47
          [0.,0.,0.,0.,0.,0.,0.,0.],  #b58
          [0.,0.,0.,0.,0.,0.,0.,0.],  #b65
          [0.,0.,0.,0.,0.,0.,0.,0.],  #b67
          [0.,0.,0.,0.,0.,0.,0.,0.],  #b68
          [0.,0.,0.,0.,0.,0.,0.,0.]]) #b78
          
    h = m([0.,0.,0.,0.,0.,0.,0.,0.])

    sol = ilp(c,G,h,A,b,I=set(range(16)),B=set(range(16)))
    total_optimal_distance = (c.T*sol[1])[0]
    return (total_optimal_distance)

#no escribir nada a partir de aca
